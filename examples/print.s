;
; File generated by cc65 v 2.18 - N/A
;
	.fopt		compiler,"cc65 v 2.18 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_val
	.export		_str
	.export		_main
	.export		_RESETVEC

.segment	"DATA"

_val:
	.word	$002B
_str:
	.addr	L0002
.segment	"RESETVEC"
_RESETVEC:
	.word	$0F00
	.word	$0600
	.word	$0000
.segment	"DATA"

.segment	"RODATA"

L0002:
	.byte	$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$0A,$00

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; int i = 0;
;
	ldx     #$00
	lda     #$00
	jsr     pushax
;
; while (str[i] != 0) {
;
	jmp     L0008
;
; uintptr_t physical_address = 0xFF00;
;
L0006:	ldx     #$FF
	lda     #$00
	jsr     pushax
;
; volatile uint16_t *memory_location = (uint16_t *)physical_address;
;
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
;
; *memory_location = str[i];
;
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	lda     _str
	ldx     _str+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	ldx     #$00
	ldy     #$00
	jsr     staxspidx
;
; i++;
;
	ldy     #$05
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$04
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
;
; }
;
	jsr     incsp4
;
; while (str[i] != 0) {
;
L0008:	lda     _str
	ldx     _str+1
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	cmp     #$00
	jsr     boolne
	jne     L0006
;
; for (;;) {}
;
L0007:	jmp     L0014
L0013:	jmp     L0007
L0014:	jmp     L0013
;
; }
;
	jsr     incsp2
	rts

.endproc

